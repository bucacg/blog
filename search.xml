<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Markdown 快速入门（typora）</title>
    <url>/2022/10/17/Markdown-%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h3 id="Markdown入门1"><a href="#Markdown入门1" class="headerlink" title="Markdown入门1"></a>Markdown入门1</h3><span id="more"></span>

<p>ctrl +shift +1   来呈现菜单</p>
<h2 id="1-代码块："><a href="#1-代码块：" class="headerlink" title="1.代码块："></a>1.代码块：</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//代码块语法：(英文状态下)</span></span><br><span class="line">​```java</span><br><span class="line">    </span><br><span class="line">​```shell</span><br></pre></td></tr></table></figure>

<p>1.java代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> day01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*一维数组</span></span><br><span class="line"><span class="comment"> * 1.数组的定义</span></span><br><span class="line"><span class="comment"> * 2.向数组中添加元素</span></span><br><span class="line"><span class="comment"> * 3.获取数组中的一个元素</span></span><br><span class="line"><span class="comment"> * 4.获取数组的空间个数</span></span><br><span class="line"><span class="comment"> * 5.获取每一个元素 迭代 遍历</span></span><br><span class="line"><span class="comment"> * 6.数组的复制</span></span><br><span class="line"><span class="comment"> * 7.数组的排序</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test101</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		<span class="comment">//1.数组的四种定义</span></span><br><span class="line">		<span class="type">int</span> []arr;</span><br><span class="line">		arr=<span class="keyword">new</span> <span class="title class_">int</span> [<span class="number">100</span>];</span><br><span class="line">		</span><br><span class="line">		<span class="type">int</span> []arr1 =<span class="keyword">new</span> <span class="title class_">int</span> [<span class="number">3</span>];</span><br><span class="line">		<span class="type">int</span> []arr2=<span class="keyword">new</span> <span class="title class_">int</span> [] &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line">		<span class="type">int</span> []arr3= &#123;<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>&#125;;</span><br><span class="line">		<span class="comment">//2.向数组中添加元素</span></span><br><span class="line">		arr1[<span class="number">0</span>]=<span class="number">10</span>;<span class="comment">//指定一个空间个数去赋值，该空间位置通过索引值即下标来找到，该索引值从0开始</span></span><br><span class="line">		arr[<span class="number">1</span>]=<span class="number">20</span>;</span><br><span class="line">		arr[<span class="number">2</span>]=<span class="number">30</span>;</span><br><span class="line">	    <span class="comment">//3.获取数组中的一个元素</span></span><br><span class="line">		System.out.println(arr[<span class="number">1</span>]);</span><br><span class="line">		<span class="comment">//4.获取数组的的空间个数</span></span><br><span class="line">		System.out.println(<span class="string">&quot;该数组的空间个数为：&quot;</span>+arr3.length);</span><br><span class="line">		<span class="comment">//5.获取数组的每一个元素的两种方法 遍历 迭代</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr3.length; i++) &#123;</span><br><span class="line">			System.out.println(arr3[i]);</span><br><span class="line">		&#125;</span><br><span class="line">			System.out.println(<span class="string">&quot;==============数组遍历方法二=========&quot;</span>);</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> m : arr3) &#123;</span><br><span class="line">			System.out.println(m);</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(<span class="string">&quot;==============数组的遍历三============&quot;</span>);</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr3.length; i++) &#123;</span><br><span class="line">			arr3[i]=i+<span class="number">5</span>;</span><br><span class="line">			System.out.println(arr3[i]);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//6.数组的复制</span></span><br><span class="line">		System.out.println(<span class="string">&quot;数组的复制&quot;</span>);</span><br><span class="line">		<span class="type">int</span> []y=<span class="keyword">new</span> <span class="title class_">int</span>[] &#123;<span class="number">5</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">1</span>&#125;;</span><br><span class="line">		</span><br><span class="line">		System.out.println(<span class="string">&quot;最可笑的复制方式&quot;</span>);</span><br><span class="line">		<span class="type">int</span> []m1=y;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i : m1) &#123;</span><br><span class="line">			System.out.println(i);</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(<span class="string">&quot;最劳累的复制方式&quot;</span>);</span><br><span class="line">		<span class="type">int</span> [] m2=<span class="keyword">new</span> <span class="title class_">int</span>[y.length];</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; y.length; i++) &#123;</span><br><span class="line">			m2[i]=y[i];<span class="comment">//目标数组赋值上原数组的每一个元素</span></span><br><span class="line">			System.out.println(m2[i]);</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(<span class="string">&quot;最简单的复制方式&quot;</span>);</span><br><span class="line">		<span class="type">int</span> [] m3=y.clone();</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i : m3) &#123;</span><br><span class="line">			System.out.println(i);</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(<span class="string">&quot;最灵活的复制方式，可以实现删除功能&quot;</span>);</span><br><span class="line">		<span class="type">int</span> []m4=<span class="keyword">new</span> <span class="title class_">int</span> [y.length];</span><br><span class="line">		<span class="comment">//System.arraycopy(1, 2, 3, 4, 5);</span></span><br><span class="line">		<span class="comment">//1.原数组</span></span><br><span class="line">		<span class="comment">//2.原数组的起始位置</span></span><br><span class="line">		<span class="comment">//3.目标数组</span></span><br><span class="line">		<span class="comment">//4.目标数组的起始位置</span></span><br><span class="line">		<span class="comment">//5.个数        </span></span><br><span class="line">		System.out.println(<span class="string">&quot;输出 5  3  1&quot;</span>);</span><br><span class="line">		System.arraycopy(y, <span class="number">0</span>, m4, <span class="number">0</span>,y.length-<span class="number">2</span> );</span><br><span class="line">		System.arraycopy(y, <span class="number">3</span>, m4, <span class="number">2</span>, y.length-<span class="number">3</span>);</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i : m4) &#123;</span><br><span class="line">			System.out.println(i);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//7.数组的排序</span></span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		int []x= &#123;6,3,8,2,9,1&#125;;</span></span><br><span class="line"><span class="comment">	          6  3  8  2  9  1----&gt;1  2  3  6  8  9</span></span><br><span class="line"><span class="comment">	   第一趟：6  3  8  2  9  1</span></span><br><span class="line"><span class="comment">	     第一次：3  6  8  2  9  1</span></span><br><span class="line"><span class="comment">	     第二次：3  6  8  2  9  1</span></span><br><span class="line"><span class="comment">	     第三次：3  6  2  8  9  1</span></span><br><span class="line"><span class="comment">	     第四次：3  6  2  8  9  1</span></span><br><span class="line"><span class="comment">	     第五次：3  6  2  8  1  9</span></span><br><span class="line"><span class="comment">	   第二趟：3  6  2  8  1  9</span></span><br><span class="line"><span class="comment">	     第一次：3  6  2  8  1  9</span></span><br><span class="line"><span class="comment">	     第二次：3  2  6  8  1  9</span></span><br><span class="line"><span class="comment">	     第三次：3  2  6  8  1  9</span></span><br><span class="line"><span class="comment">	     第四次：3  2  6  1  8  9</span></span><br><span class="line"><span class="comment">	   第三趟：3  2  6  1  8  9</span></span><br><span class="line"><span class="comment">	     第一次：2  3  6  1  8  9</span></span><br><span class="line"><span class="comment">	     第二次：2  3  6  1  8  9</span></span><br><span class="line"><span class="comment">	     第三次：2  3  1  6  8  9</span></span><br><span class="line"><span class="comment">	   第四趟:2  3  1  6  8  9</span></span><br><span class="line"><span class="comment">	     第一次：2  3  1  6  8  9</span></span><br><span class="line"><span class="comment">	     第二次：2  1  3  6  8  9</span></span><br><span class="line"><span class="comment">	   第五趟：2  1  3  6  8  9</span></span><br><span class="line"><span class="comment">	     第一次：1  2  3  6  8  9</span></span><br><span class="line"><span class="comment">总结：x.length=4</span></span><br><span class="line"><span class="comment">    趟数：x.length-1</span></span><br><span class="line"><span class="comment">    次数：x.length-趟数</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">		System.out.println(<span class="string">&quot;===========数组的排序=============&quot;</span>);</span><br><span class="line">		<span class="type">int</span> []x=&#123;<span class="number">6</span>,<span class="number">3</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">9</span>,<span class="number">1</span>&#125;;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; x.length-<span class="number">1</span>; i++) &#123;<span class="comment">//趟数</span></span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; x.length-<span class="number">1</span>-i; j++) &#123;<span class="comment">//次数</span></span><br><span class="line">				<span class="keyword">if</span> (x[j]&gt;x[j+<span class="number">1</span>]) &#123;</span><br><span class="line">					<span class="type">int</span> n=x[j];</span><br><span class="line">					x[j]=x[j+<span class="number">1</span>];</span><br><span class="line">					x[j+<span class="number">1</span>]=n;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i : x) &#123;</span><br><span class="line">			System.out.print(i+<span class="string">&quot;  &quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(<span class="string">&quot;利用数组的工具类Arrays中的Sort方法&quot;</span>);</span><br><span class="line">		<span class="type">int</span>[]xx=<span class="keyword">new</span> <span class="title class_">int</span> [] &#123;<span class="number">6</span>,<span class="number">3</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">9</span>,<span class="number">1</span>&#125;;</span><br><span class="line">		Arrays.sort(xx);</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i : xx) &#123;</span><br><span class="line">			System.out.print(i+<span class="string">&quot;  &quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>2.shell 脚本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//在linux下spring项目的启动命令</span><br><span class="line">#java -jar blog start</span><br></pre></td></tr></table></figure>

<h2 id="2-标题语法"><a href="#2-标题语法" class="headerlink" title="2.标题语法"></a>2.标题语法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure>

<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h2 id="3-字体："><a href="#3-字体：" class="headerlink" title="3.字体："></a>3.字体：</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//加粗、</span></span><br><span class="line">**加粗内容**</span><br><span class="line"><span class="comment">//代码高亮显示</span></span><br><span class="line">    ==我是高亮的内容==</span><br><span class="line"><span class="comment">//删除线</span></span><br><span class="line">    ~~被删除的文字~~</span><br><span class="line"><span class="comment">//斜体</span></span><br><span class="line">    *斜体内容*</span><br></pre></td></tr></table></figure>

<p>&#x2F;&#x2F;加粗、<br><strong>加粗内容</strong><br>&#x2F;&#x2F;代码高亮显示<br>    &#x3D;&#x3D;我是高亮的内容&#x3D;&#x3D;<br>&#x2F;&#x2F;删除线<br>    <del>被删除的文字</del><br>&#x2F;&#x2F;斜体<br>    <em>斜体内容</em></p>
<h2 id="4-引用语法"><a href="#4-引用语法" class="headerlink" title="4.引用语法"></a>4.引用语法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//引用</span></span><br><span class="line">&gt;引用内容<span class="number">1</span></span><br><span class="line">&gt;&gt;引用内容<span class="number">2</span></span><br><span class="line">&gt;&gt;&gt;引用内容<span class="number">3</span></span><br></pre></td></tr></table></figure>

<p>&#x2F;&#x2F;引用</p>
<blockquote>
<p>引用内容1</p>
<blockquote>
<p>引用内容2</p>
<blockquote>
<p>引用内容3</p>
</blockquote>
</blockquote>
</blockquote>
<h2 id="5-分割线"><a href="#5-分割线" class="headerlink" title="5.分割线"></a>5.分割线</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1.部分分割线</span></span><br><span class="line">---</span><br><span class="line"><span class="comment">//2.全屏分割线</span></span><br><span class="line">***</span><br></pre></td></tr></table></figure>

<hr>
<hr>
<h2 id="6-图片插入"><a href="#6-图片插入" class="headerlink" title="6.图片插入"></a>6.图片插入</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1.在线图片(!为英文状态下)</span></span><br><span class="line">![图片名]（图片路径）</span><br><span class="line"><span class="comment">//2.本地图片</span></span><br><span class="line">    </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="https://img2.baidu.com/it/u=3565643375,1286481123&fm=253&app=138&size=w931&n=0&f=JPEG&fmt=auto?sec=1666285200&t=b6c0b46e8f7023c832ed0e18ecb4a89a" alt="背景图"></p>
<h2 id="7-超链接"><a href="#7-超链接" class="headerlink" title="7.超链接"></a>7.超链接</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//超链接语法</span></span><br><span class="line">[超链接的内容](超链接地址)</span><br></pre></td></tr></table></figure>

<p><a href="https://github.com/bucacg/bucacg.github.io">github.com</a></p>
<p><a href="%5Bgithub.com%5D(https://github.com/bucacg/bucacg.github.io)">my Github</a></p>
<h2 id="8-列表"><a href="#8-列表" class="headerlink" title="8.列表"></a>8.列表</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//无序列表</span></span><br><span class="line">- 目录<span class="number">1</span></span><br><span class="line">- 目录<span class="number">2</span></span><br><span class="line">- 目录<span class="number">3</span></span><br><span class="line"><span class="comment">//有序列表</span></span><br><span class="line">    数字键+.+名称</span><br></pre></td></tr></table></figure>

<ul>
<li>目录1<ul>
<li>目录2<ul>
<li>目录3</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>1.首页</p>
<p>2.目录</p>
<p>3.正文</p>
<h2 id="9-表格"><a href="#9-表格" class="headerlink" title="9.表格"></a>9.表格</h2><p>右键插入表格（ctrl+&#x2F;  可查看源码）</p>
<table>
<thead>
<tr>
<th>学号</th>
<th>姓名</th>
<th>班级</th>
</tr>
</thead>
<tbody><tr>
<td>001</td>
<td>咯这是</td>
<td>java班</td>
</tr>
<tr>
<td>002</td>
<td>模型</td>
<td>python班</td>
</tr>
<tr>
<td>003</td>
<td>先江苏南京</td>
<td>c++班</td>
</tr>
</tbody></table>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=536623312&auto=0&height=66"></iframe>]]></content>
  </entry>
  <entry>
    <title>Python(胶水语言)入门</title>
    <url>/2022/10/20/Python%E6%88%90%E9%95%BF%E8%AE%B0/</url>
    <content><![CDATA[<h3 id="python基础1"><a href="#python基础1" class="headerlink" title="python基础1"></a><em>python基础1</em></h3><span id="more"></span>

<p><em>先安利学习网站</em></p>
<p><a href="http://c.biancheng.net/python/">C语言中文网</a> </p>
<p><a href="https://www.cnblogs.com/">博客网</a></p>
<p><a href="https://www.runoob.com/">菜鸟教程</a></p>
<h2 id="一-Python相关"><a href="#一-Python相关" class="headerlink" title="一.Python相关"></a>一.Python相关</h2><h3 id="1-Python前景"><a href="#1-Python前景" class="headerlink" title="1.Python前景"></a>1.Python前景</h3><h6 id="爬虫工程师"><a href="#爬虫工程师" class="headerlink" title="爬虫工程师"></a>爬虫工程师</h6><p>​    爬数据分析</p>
<h6 id="Web开发工程师"><a href="#Web开发工程师" class="headerlink" title="Web开发工程师"></a>Web开发工程师</h6><p>​    网页设计（前端）<br>    通过后台处理，返回给前端（后端）<br>    小程序，网站，app等</p>
<h3 id="2-编程语言"><a href="#2-编程语言" class="headerlink" title="2.编程语言"></a>2.编程语言</h3><h4 id="1-何为编程语言"><a href="#1-何为编程语言" class="headerlink" title="1.何为编程语言"></a>1.何为编程语言</h4><p>编程就是编写程序，程序就是一系列指令，告诉计算机做什么。</p>
<p>编程语言就是我们能让计算机识别的语言。</p>
<h4 id="2-编程语言发展史"><a href="#2-编程语言发展史" class="headerlink" title="2.编程语言发展史"></a>2.编程语言发展史</h4><ul>
<li><p>机器码:  0   1</p>
<p>​	二进制   八进制    十进制  十六进制</p>
</li>
<li><p>汇编语言</p>
</li>
<li><p>高级语言</p>
<p>​	用人类的方式来编写程序</p>
<p>​	高级语言的老大哥C</p>
<pre><code>  Java   go python. 都有c的影子
</code></pre>
<h3 id="3-Python特点"><a href="#3-Python特点" class="headerlink" title="3.Python特点"></a>3.Python特点</h3><p>​	Python（胶水语言）简单灵活易上手。可配合其他语言使用。可用于游戏开发，系统管理，web应用，web安全，爬虫……</p>
<h3 id="4-Python官网-卡"><a href="#4-Python官网-卡" class="headerlink" title="4.Python官网:(卡)"></a>4.Python官网:(卡)</h3><h4 id="网站以及问题"><a href="#网站以及问题" class="headerlink" title="网站以及问题"></a>网站以及问题</h4><p>​	[官网]<a href="https://www.python.org/downloads/">https://www.python.org/downloads/</a></p>
<p>​	验证是否安装成功: cmd里输入python出现版本则成功<br>为什么要加入环境变量呢？为了让计算机知道Python的位置<br>如何卸载干净？打开控制面板——_卸载程序_找到卸载程序——卸载	</p>
<h2 id="二-输入-amp-输出"><a href="#二-输入-amp-输出" class="headerlink" title="二.输入 &amp;输出"></a>二.输入 &amp;输出</h2><p>​	所有符号英文状态。必须有双引号</p>
<h3 id="1-输入input（“系统提示内容”）"><a href="#1-输入input（“系统提示内容”）" class="headerlink" title="1.输入input（“系统提示内容”）"></a>1.输入input（“系统提示内容”）</h3><p>​	input (“系统提示的内容”)#input是提示用户输入什么的<br>input ()#获取你键盘输入的数据<br>input (“请输入电话号:”)#程序运行后会暂停等待你回车，继续执行</p>
<h3 id="2-输出print-“输出内容”"><a href="#2-输出print-“输出内容”" class="headerlink" title="2.输出print(“输出内容”)"></a>2.输出print(“输出内容”)</h3><p>​	怎么输出引号？</p>
<h2 id="三-注释"><a href="#三-注释" class="headerlink" title="三.注释"></a>三.注释</h2><p>给程序做批注的，不会显示到程序中去</p>
<p>不想打印时可用</p>
<ul>
<li>单行注释</li>
</ul>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 2022年10月19号</span></span><br><span class="line"><span class="comment"># 作者：bucacg</span></span><br><span class="line"><span class="comment"># 注释的demo</span></span><br><span class="line"><span class="built_in">input</span>(<span class="string">&quot;请输入你的名字：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;注释&quot;</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li><p>多行注释</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;&quot;&quot;</span><br><span class="line">三对引号内多行注释的内容，都不会对程序造成影响，</span><br><span class="line">但必须英文状态下的三对符号</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">2022年10月19号</span><br><span class="line">作者：bucacg</span><br><span class="line">注释的demo</span><br><span class="line">&quot;&quot;&quot;</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="四-开发模式"><a href="#四-开发模式" class="headerlink" title="四.开发模式"></a>四.开发模式</h2><h4 id="1-命令行模式（交互模式）"><a href="#1-命令行模式（交互模式）" class="headerlink" title="1.命令行模式（交互模式）"></a>1.命令行模式（交互模式）</h4><ul>
<li>win + r   输入cmd ，打开黑窗口   》》 输入 Python 》》 这就是命令行模式</li>
</ul>
<h4 id="2-文本模式（脚本模式）idle可打开"><a href="#2-文本模式（脚本模式）idle可打开" class="headerlink" title="2.文本模式（脚本模式）idle可打开"></a>2.文本模式（脚本模式）idle可打开</h4><ul>
<li>new file  新建        open file来修改，</li>
<li>鼠标右键新建文本txt— 编写Python代码–修改文件名的后缀 为 .py</li>
<li>两者区别：<ul>
<li>命令行不能长期保存代码 ，不太好进行 修改， 好处就是方便我们测试一些模块的简单使用，以及快速打印变量的值</li>
<li>文本的就能够长期保存我们的代码  下次修改 也是比较方便， 我们一般开发也是基于文本模式</li>
</ul>
</li>
</ul>
<h2 id="五-数据类型与变量"><a href="#五-数据类型与变量" class="headerlink" title="五.数据类型与变量"></a>五.数据类型与变量</h2><h3 id="何为变量"><a href="#何为变量" class="headerlink" title="何为变量"></a>何为变量</h3><p>输出变量不需要引号</p>
<p>目的：计算两个数的和</p>
<p>场景：我们去超市购物，用菜篮来装东西（肉，菜，调味品）购物结束，需要去结算金额</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># a 表示青菜 价格</span></span><br><span class="line"><span class="comment"># b 表示肉 价格</span></span><br><span class="line">a = <span class="number">12</span>   <span class="comment"># a 存放了  数据 12 </span></span><br><span class="line">b = <span class="number">32</span></span><br><span class="line">result = a+b</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;最后结果为&quot;</span>, a+b)</span><br></pre></td></tr></table></figure>

<p>小结：</p>
<ul>
<li><strong>变量就是一个容器可以是菜篮子,存储各种数据，也可以存储一个数据</strong></li>
<li><strong>程序用来处理数据的，变量则是用来存储数据的</strong></li>
</ul>
<h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">- <span class="built_in">int</span>    （整形）  <span class="number">123</span> <span class="number">10000</span> </span><br><span class="line">- <span class="built_in">float</span>  （浮点数） <span class="number">3.14</span> </span><br><span class="line">- <span class="built_in">bool</span> 布尔类型     <span class="literal">True</span> 真   <span class="literal">False</span> 假</span><br><span class="line">- <span class="built_in">str</span>（字符串）  <span class="string">&quot;引号里的就是字符串&quot;</span></span><br><span class="line">- <span class="built_in">tuple</span>（元组）</span><br><span class="line">- <span class="built_in">dict</span>（字典）</span><br><span class="line">- <span class="built_in">list</span>（列表）</span><br><span class="line">- <span class="built_in">set</span>（集合）</span><br></pre></td></tr></table></figure>

<h3 id="怎样知道一个变量的类型呢"><a href="#怎样知道一个变量的类型呢" class="headerlink" title="怎样知道一个变量的类型呢"></a>怎样知道一个变量的类型呢</h3><blockquote>
<p>type(变量名)  会返回变量的类型</p>
<p>在Python中，只要我们自己定义好变量后，解释器就会自动识别他的一个类型 ，不需要我们自动说明</p>
<p>type一次只能查看一个数据类型</p>
</blockquote>
<h3 id="int整形"><a href="#int整形" class="headerlink" title="int整形"></a>int整形</h3><blockquote>
<p>人数，日期，牙齿的数量，</p>
</blockquote>
<p>声明方式</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">变量名 = 整数值</span><br><span class="line">a = <span class="number">12</span></span><br><span class="line">b = <span class="number">32</span></span><br><span class="line">d,f，e = <span class="number">23</span>,<span class="number">22222223</span>,<span class="number">5662</span></span><br></pre></td></tr></table></figure>

<h3 id="float-浮点型"><a href="#float-浮点型" class="headerlink" title="float 浮点型"></a>float 浮点型</h3><blockquote>
<p>金钱，身高，体重，圆周率</p>
</blockquote>
<p>声明方式</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">变量名 = 浮点数</span><br><span class="line">num1 =  <span class="number">3.14</span></span><br><span class="line">height = <span class="number">1.78</span></span><br><span class="line"><span class="built_in">print</span>(height)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(height))</span><br></pre></td></tr></table></figure>

<p>注意：</p>
<blockquote>
<p>浮点类型的计算是不精准的，两个浮点值运算，可能会丢失精度(带小数点的十进制数据,转为二进制数据的时候会丢失) 0.3 -0.2 不等于0.1 </p>
</blockquote>
<h3 id="bool-类型"><a href="#bool-类型" class="headerlink" title="bool 类型"></a>bool 类型</h3><blockquote>
<p>生活的 真 与 假 </p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">变量名 = 布尔值</span><br><span class="line"></span><br><span class="line">flag = <span class="literal">True</span></span><br><span class="line">lose = <span class="literal">False</span></span><br></pre></td></tr></table></figure>


<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">注意：</span><br><span class="line"></span><br><span class="line">- 首字母必须要大写，</span><br><span class="line">- 布尔类型，也可以是数值， 并且运算，True = 1  False = 0</span><br><span class="line"></span><br><span class="line">## 五.标识符与关键字</span><br><span class="line"></span><br><span class="line">### 什么是标识符</span><br><span class="line"></span><br><span class="line">![1655048857217](D:/02%E5%8F%98%E9%87%8F%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.assets/1655048857217.png)</span><br><span class="line"></span><br><span class="line">### 标识符规则</span><br><span class="line"></span><br><span class="line">- 标识符由字母、下划线和数字组成，且数字不能开头 </span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line">    fromNo12	 #True   </span><br><span class="line">	from#12      #False</span><br><span class="line">	my_Boolean   #True</span><br><span class="line">	my-Boolean   #False</span><br><span class="line">	Obj2         #True</span><br><span class="line">	2ndObj       #False</span><br><span class="line">	myInt        #True</span><br><span class="line">	test1        #True</span><br><span class="line">	Mike2jack    #True</span><br><span class="line">	My_tExt      #True</span><br><span class="line">	_test        #True</span><br><span class="line">	test!32      #True</span><br><span class="line">	haha(da)tt   #False</span><br><span class="line">	int   # int 类型标识符  不要与Python解释器的重复，会产生冲突    #False</span><br><span class="line">	jack_roseint  #True  </span><br><span class="line">	jack&amp;rose     #False</span><br><span class="line">	GUI           #False</span><br><span class="line">	G.U.I         #False</span><br></pre></td></tr></table></figure>

<p><strong>Python 标识符是区分大小写</strong> </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Andy != andy </span><br></pre></td></tr></table></figure>

<h3 id="命名规则"><a href="#命名规则" class="headerlink" title="命名规则"></a>命名规则</h3><ul>
<li><p>见面知意</p>
<blockquote>
<p>起一个有意义的名字，尽量做到看一眼就知道是什么意思(提高代码可 读性) 比如: 名字 就定义为 name , 定义学生 用 student</p>
</blockquote>
</li>
</ul>
<p><img src="D:/02%E5%8F%98%E9%87%8F%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.assets/1655049741609.png" alt="1655049741609"></p>
<h4 id="驼峰命名法"><a href="#驼峰命名法" class="headerlink" title="驼峰命名法"></a>驼峰命名法</h4><blockquote>
<p>小驼峰式命名法（lower camel case）： 第一个单词以小写字母开始；第二个单词的首字母大写，例如：myName、aDog<br>大驼峰式命名法（upper camel case）： 每一个单字的首字母都采用大写字母，例如：FirstName、LastName</p>
<p>​</p>
</blockquote>
<h3 id="下划线命名法"><a href="#下划线命名法" class="headerlink" title="下划线命名法"></a>下划线命名法</h3><p>还有一种命名法是用下划线“_”来连接所有的单词，比如<code>send_buf</code> 、 <code>save_img</code>， </p>
<p><strong>小结：</strong></p>
<ul>
<li>推荐使用下划线的命名法来定义变量名</li>
<li>不要与关键字重名</li>
</ul>
<h4 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">and</span>     <span class="keyword">as</span>      <span class="keyword">assert</span>     <span class="keyword">break</span>     <span class="keyword">class</span>      <span class="title class_">continue</span>    <span class="keyword">def</span>     <span class="title function_">del</span></span><br><span class="line"><span class="keyword">elif</span>    <span class="keyword">else</span>    <span class="keyword">except</span>     <span class="built_in">exec</span>      <span class="keyword">finally</span>    <span class="keyword">for</span>         <span class="keyword">from</span>    <span class="keyword">global</span></span><br><span class="line"><span class="keyword">if</span>      <span class="keyword">in</span>      <span class="keyword">import</span>     <span class="keyword">is</span>        <span class="keyword">lambda</span>     <span class="keyword">not</span>         <span class="keyword">or</span>      <span class="keyword">pass</span></span><br><span class="line"><span class="built_in">print</span>   <span class="keyword">raise</span>   <span class="keyword">return</span>     <span class="keyword">try</span>       <span class="keyword">while</span>      <span class="keyword">with</span>        <span class="keyword">yield</span></span><br></pre></td></tr></table></figure>

<ul>
<li>通过Python shell 来查看关键字</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> keyword </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>keyword.kwlist </span><br></pre></td></tr></table></figure>

<p>或者</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">help</span>(<span class="string">&#x27;keywords&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p><strong>小结：</strong></p>
<ul>
<li>关键字的学习以及使用，咱们会在后面的课程中依一一进行学习。 </li>
<li>关键字不需要同学们进行记忆，大家只要经常使用，就会记住了</li>
<li>变量名也不要与关键字重名</li>
</ul>
<h2 id="六-运算符"><a href="#六-运算符" class="headerlink" title="六.运算符"></a>六.运算符</h2><p>提到运算符，我想大家首先想到的就是加、减、乘、除之类，但python可以进行的运算有很多种，可不只加减乘除这么简单 ，我们写代码时常见的运算符有以下几种</p>
<h3 id="1-算术运算符"><a href="#1-算术运算符" class="headerlink" title="1.算术运算符"></a>1.算术运算符</h3><p>下面以a&#x3D;10 ,b&#x3D;20为例进行计算</p>
</li>
</ul>
<table>
<thead>
<tr>
<th>运算符</th>
<th>描述</th>
<th>实例</th>
</tr>
</thead>
<tbody><tr>
<td>+</td>
<td>加</td>
<td>两个对象相加 a + b 输出结果 30</td>
</tr>
<tr>
<td>-</td>
<td>减</td>
<td>得到负数或是一个数减去另一个数 a - b 输出结果 -10</td>
</tr>
<tr>
<td>*</td>
<td>乘</td>
<td>两个数相乘或是返回一个被重复若干次的字符串 a * b 输出结果 200</td>
</tr>
<tr>
<td>&#x2F;</td>
<td>除</td>
<td>b &#x2F; a 输出结果 2</td>
</tr>
<tr>
<td>&#x2F;&#x2F;</td>
<td>取整除</td>
<td>返回商的整数部分 9&#x2F;&#x2F;2 输出结果 4 , 9.0&#x2F;&#x2F;2.0 输出结果 4.0</td>
</tr>
<tr>
<td>%</td>
<td>取余</td>
<td>返回除法的余数 b % a 输出结果 0</td>
</tr>
<tr>
<td>**</td>
<td>指数</td>
<td>a**b 为10的20次方， 输出结果 100000000000000000000</td>
</tr>
</tbody></table>
<blockquote>
<p>注意：混合运算时，优先级顺序为： ** 高于 * &#x2F; % &#x2F;&#x2F; 高于 + - ，为了避免歧义，建议使用 () 来处理运算符优先级。<br>并且，不同类型的数字在进行混合运算时，整数将会转换成浮点数进行运算。	</p>
</blockquote>
<h3 id="2-赋值运算符"><a href="#2-赋值运算符" class="headerlink" title="2.赋值运算符"></a>2.赋值运算符</h3><table>
<thead>
<tr>
<th>运算符</th>
<th>描述</th>
<th>实例</th>
</tr>
</thead>
<tbody><tr>
<td>&#x3D;</td>
<td>赋值运算符</td>
<td>把 &#x3D; 号<em>右边的结果 赋给 左边的变量</em>，如 num &#x3D; 1 + 2 * 3，结果num的值为7</td>
</tr>
</tbody></table>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 单个变量赋值</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>num = <span class="number">10</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>num</span><br><span class="line"><span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 多个变量赋值</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>num1, num2, f1, str1 = <span class="number">100</span>, <span class="number">200</span>, <span class="number">3.14</span>, <span class="string">&quot;hello&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>num1</span><br><span class="line"><span class="number">100</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>num2</span><br><span class="line"><span class="number">200</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f1</span><br><span class="line"><span class="number">3.14</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str1</span><br><span class="line"><span class="string">&quot;hello&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出多个变量</span></span><br><span class="line"><span class="built_in">print</span>(num1, num2, f1, str1)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>  复合赋值运算符</p>
<table>
<thead>
<tr>
<th>运算符</th>
<th>描述</th>
<th>实例</th>
</tr>
</thead>
<tbody><tr>
<td>+&#x3D;</td>
<td>加法赋值运算符</td>
<td>c +&#x3D; a 等效于 c &#x3D; c + a</td>
</tr>
<tr>
<td>-&#x3D;</td>
<td>减法赋值运算符</td>
<td>c -&#x3D; a 等效于 c &#x3D; c - a</td>
</tr>
<tr>
<td>*&#x3D;</td>
<td>乘法赋值运算符</td>
<td>c *&#x3D; a 等效于 c &#x3D; c * a</td>
</tr>
<tr>
<td>&#x2F;&#x3D;</td>
<td>除法赋值运算符</td>
<td>c &#x2F;&#x3D; a 等效于 c &#x3D; c &#x2F; a</td>
</tr>
<tr>
<td>%&#x3D;</td>
<td>取模赋值运算符</td>
<td>c %&#x3D; a 等效于 c &#x3D; c % a</td>
</tr>
<tr>
<td>**&#x3D;</td>
<td>幂赋值运算符</td>
<td>c **&#x3D; a 等效于 c &#x3D; c **a</td>
</tr>
<tr>
<td>&#x2F;&#x2F;&#x3D;</td>
<td>取整除赋值运算符</td>
<td>c &#x2F;&#x2F;&#x3D; a 等效于 c &#x3D; c &#x2F;&#x2F; a</td>
</tr>
</tbody></table>
<h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> 1.用变量存储我们生活中的数值信息,并输出  </span><br><span class="line">   ``年龄</span><br><span class="line">   ``身高</span><br><span class="line">   ``生日</span><br><span class="line">   ``日期</span><br><span class="line">   ``时间</span><br><span class="line"> ``tips: 年龄为int类型 身高为float类型 生日为int类型 日期为int类型 时间 int类型</span><br><span class="line"> </span><br><span class="line"> 2.用什么函数可以知道变量的类型</span><br><span class="line"> 	tips：自己定义两个变量，用Python内置函数</span><br><span class="line"> </span><br><span class="line">3.判断以下变量是否正确, 并且用True（对） False（错）表示对错</span><br><span class="line">	_=6			(T) #正确但不建议</span><br><span class="line">	_8=12		(T)</span><br><span class="line">	6age=12 	(F)</span><br><span class="line">	true=23 	(T)#True才是关键字，这里原则上正确，但是不符合规范</span><br><span class="line">	print=22	(F)</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line">4.用编程计算 a = 10，b = 20 的 加，减，乘，除。 并且打印出结果</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">5.交换两个变量的值，a = 10 ,b =20   变成 a =20 ,b=10  （面试题）</span><br><span class="line">	不能直接复值 a =20 b =10</span><br><span class="line">	tips：利用Python特殊机制</span><br><span class="line">		  算数运算符</span><br><span class="line">		  第三个变量</span><br><span class="line">		  a,b=b,a</span><br><span class="line">		  </span><br><span class="line">6.变量赋值：如何将100赋值给变量A，将100.0赋值给变量B；并分别判断A，B的变量类型	</span><br><span class="line"></span><br><span class="line">7.如何将 Hello，world!赋值给变量C，并判断C的变量类型</span><br><span class="line"></span><br><span class="line">8.如何实现将对象 1, 2, john 同时复制给变量a,b,c(一行代码)</span><br><span class="line"></span><br><span class="line">9.请找出下面代码的错误</span><br><span class="line">   break=1  #  break为关键字</span><br><span class="line">   print(break)</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line"> </span><br></pre></td></tr></table></figure>

<p>  ​</p>
<h2 id="巩固博客"><a href="#巩固博客" class="headerlink" title="巩固博客"></a>巩固博客</h2><ul>
<li><a href="http://c.biancheng.net/view/2171.html">http://c.biancheng.net/view/2171.html</a></li>
<li>前期不建议你们使用pycharm ， 为什么， 因为他会自动提示， 补全代码</li>
<li>idle，方便练习代码    </li>
<li>pycharm 熟悉了再用</li>
</ul>
<h1 id="七-序列类型"><a href="#七-序列类型" class="headerlink" title="七.序列类型"></a>七.序列类型</h1><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><p>用来存储描述性质的数据，eg：姓名，地址。自我介绍等。字符串是一个有序的集合</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a  = <span class="number">10000</span>  <span class="comment"># 什么类型   int</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(a))</span><br></pre></td></tr></table></figure>

<p>字符串类型</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">str01 = <span class="string">&quot;hello world&quot;</span>    <span class="comment"># str</span></span><br><span class="line">str02 = <span class="string">&#x27;女士，先生们下午好！&#x27;</span>  <span class="comment"># str</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 字符串引号的嵌套报错 </span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;bucacg&quot;)    # 不能单双混合</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      </span></span><br><span class="line"><span class="string">print(&#x27;</span>人生苦短，<span class="string">&#x27;我用Python&quot;) # 解决print(&quot;&#x27;</span>人生苦短，<span class="string">&#x27;我用Python&quot;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure>

<p>三引号的使用:可以用来注释，也可以用来包裹一些常用的字符串</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 一般都用来包裹 长的字符串</span></span><br><span class="line">a=<span class="string">&quot;&quot;&quot;床前明月光，疑是地上霜。举头望明月，低头思故乡</span></span><br><span class="line"><span class="string">床前明月光，疑是地上霜。举头望明月，低头思故乡</span></span><br><span class="line"><span class="string">床前明月光，疑是地上霜。举头望明月，低头思故乡</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">床前明月光，疑是地上霜。举头望明月，低头思故乡</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">床前明月光，疑是地上霜。举头望明月，低头思故乡</span></span><br><span class="line"><span class="string">床前明月光，疑是地上霜。举头望明月，低头思故乡</span></span><br><span class="line"><span class="string">床前明月光，疑是地上霜。举头望明月，低头思故乡</span></span><br><span class="line"><span class="string">床前明月光，疑是地上霜。举头望明月，低头思故乡</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">      </span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 多行注释 </span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">同学们好，我是多行注释</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 一定要记住他们的区别，多行注释是 三引号 独占一行</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>小结：</p>
<ul>
<li>双引号或者单引号中的数据，就是字符串 </li>
<li>不能单双混合 </li>
<li>不能出现多对引号 print(‘我说:’晚上好’’)    # 里面两对引号都是单引号</li>
</ul>
<h2 id="下标和切片"><a href="#下标和切片" class="headerlink" title="下标和切片"></a>下标和切片</h2><p>“下标” 就是编号，就比如超市的存储柜的编号，通过编号就能找到相应的存储空间</p>
<p>生活中的“下标”</p>
<ul>
<li>超市的存储柜</li>
<li>高铁座位</li>
</ul>
<p>字符串，列表，元组都支持下标索引， <strong>字符串 实际上就是字符的数据集合， 索引支持的下标索引</strong></p>
<p>切片：就是取出一部分 ，切出一部分数据，	</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 语法</span></span><br><span class="line">变量[下标]</span><br><span class="line">变量[起始:结束:步长]</span><br><span class="line"></span><br><span class="line"><span class="comment"># demo；</span></span><br><span class="line">hel_str = <span class="string">&quot;大家晚上好，今天星期六&quot;</span></span><br><span class="line"><span class="comment">#          0 1 2 3 45 6 7 8 9 10</span></span><br><span class="line"><span class="built_in">print</span>(hel_str[<span class="number">3</span>]) <span class="comment"># 上</span></span><br><span class="line"><span class="built_in">print</span>(hel_str[<span class="number">0</span>:<span class="number">2</span>]) <span class="comment"># 大家</span></span><br><span class="line"><span class="built_in">print</span>(hel_str[<span class="number">2</span>::<span class="number">2</span>])  <span class="comment"># &#x27;晚好今星六 &#x27;</span></span><br><span class="line"><span class="built_in">print</span>(hel_str[::-<span class="number">1</span>])  <span class="comment"># &#x27;六期星天今，好上晚家大&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(hel_str[<span class="number">1</span>:<span class="number">10</span>])   <span class="comment"># 这里 取到 1到9 </span></span><br><span class="line"><span class="built_in">print</span>(hel_str[<span class="number">11</span>])    <span class="comment"># 下标越界</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hel_str[:<span class="number">3</span>]     <span class="comment"># &#x27;大家晚&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hel_str[:<span class="number">3</span>:-<span class="number">1</span>]  <span class="comment">#&#x27;六期星天今，好&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hel_str[::-<span class="number">1</span>]   <span class="comment">#&#x27;六期星天今，好上晚家大&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hel_str[::<span class="number">2</span>]    <span class="comment">#&#x27;大晚好今星六&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hel_str[::-<span class="number">2</span>]   <span class="comment">#&#x27;六星今好晚大&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hel_str[:<span class="number">3</span>:-<span class="number">2</span>]  <span class="comment">#&#x27;六星今好&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hel_str[:<span class="number">3</span>:<span class="number">2</span>]   <span class="comment">#&#x27;大晚&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hel_str[::-<span class="number">100</span>]  <span class="comment">#&#x27;六&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hel_str[::-<span class="number">10</span>]   <span class="comment">#&#x27;六大&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hel_str[::-<span class="number">11</span>]   <span class="comment">#&#x27;六&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hel_str[::-<span class="number">12</span>]   <span class="comment">#&#x27;六&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hel_str[::-<span class="number">9</span>]    <span class="comment">#&#x27;六家&#x27;</span></span><br><span class="line">&gt;&gt;&gt;hel_str[:<span class="built_in">len</span>(hel_str)/<span class="number">2</span>]</span><br><span class="line"><span class="string">&quot;&quot;&quot; </span></span><br><span class="line"><span class="string">输出结果为;</span></span><br><span class="line"><span class="string">Traceback (most recent call last):</span></span><br><span class="line"><span class="string">  File &quot;&lt;pyshell#18&gt;&quot;, line 1, in &lt;module&gt;</span></span><br><span class="line"><span class="string">    hel_str[:len(hel_str)/2]</span></span><br><span class="line"><span class="string">TypeError: slice indices must be integers or None or have an __index__ method</span></span><br><span class="line"><span class="string">意思是不是整数，解决方法是整除//</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">hel_str[:<span class="built_in">len</span>(hel_str)//<span class="number">2</span>]</span><br><span class="line"><span class="comment">#&#x27;大家晚上好&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hel_str[<span class="number">11</span>]</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">Traceback (most recent call last):</span></span><br><span class="line"><span class="string">  File &quot;&lt;pyshell#20&gt;&quot;, line 1, in &lt;module&gt;</span></span><br><span class="line"><span class="string">    hel_str[11]</span></span><br><span class="line"><span class="string">IndexError: string index out of range</span></span><br><span class="line"><span class="string">超出范围</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">super_people = <span class="string">&quot;超级赛亚人&quot;</span></span><br><span class="line">                <span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span></span><br><span class="line"><span class="built_in">print</span>(super_people[<span class="number">0</span>:<span class="number">2</span>])<span class="comment"># 超级</span></span><br><span class="line"><span class="built_in">print</span>(super_people[<span class="number">4</span>:<span class="number">2</span>】<span class="comment">#无结果</span></span><br><span class="line"><span class="built_in">print</span>(super_people[<span class="number">4</span>:<span class="number">2</span>:-<span class="number">1</span>])<span class="comment"># 人亚</span></span><br><span class="line"><span class="built_in">print</span>(super_people[<span class="number">4</span>])<span class="comment"># 人</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul>
<li>下标 是从0开始  且不能越界（报错）</li>
<li>切片 只包含 起始位置，不包含 结束位置，（取头不取尾）</li>
<li>切片  空着不写，默认是全部取出</li>
<li>步长 常用于逆序输出 [::-1]</li>
</ul>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>在实际开发中，经常需要将多个数据存储起来，以便后边的代码使用。<em>列表<code>list</code>，是一个<strong>有序</strong>且<strong>可变</strong>的容器，在里面可以存放多个<strong>不同类型</strong>的元素</em>。</p>
<p>列表会将所有数据都放在一对中括号<code>[ ]</code>里面，相邻数据之间用逗号<code>,</code>分隔</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 语法</span></span><br><span class="line">列表名 = [数据<span class="number">1</span>， 数据<span class="number">2</span>]</span><br><span class="line">demo1 = [<span class="string">&quot;2022&quot;</span>, <span class="string">&quot;jk&quot;</span>, <span class="number">18</span>, <span class="literal">True</span>, <span class="number">99.1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列表里面,还可以再放列表 </span></span><br><span class="line">a = [<span class="number">12</span>,<span class="number">13</span>,<span class="number">33</span>]</span><br><span class="line">b = [a,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]      <span class="comment">#[[12, 13, 33], 4, 5, 6]</span></span><br><span class="line"><span class="comment"># 我想输出b里面的12</span></span><br><span class="line"><span class="built_in">print</span>(b[<span class="number">0</span>]) <span class="comment"># 取出[12,13,33]</span></span><br><span class="line"><span class="built_in">print</span>(b[<span class="number">0</span>][<span class="number">0</span>]) <span class="comment"># 取出12</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列表里的值是可以修改的</span></span><br><span class="line">demo1[<span class="number">0</span>] = <span class="number">9999</span>   <span class="comment">#[9999, &quot;jk&quot;, 18, True, 99.1]</span></span><br><span class="line">demo1[:<span class="number">3</span>]=<span class="number">1314</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Traceback (most recent call last):</span></span><br><span class="line"><span class="string">  File &quot;&lt;pyshell#44&gt;&quot;, line 1, in &lt;module&gt;</span></span><br><span class="line"><span class="string">    demo1[:3]=1314</span></span><br><span class="line"><span class="string">TypeError: can only assign an iterable</span></span><br><span class="line"><span class="string">  这里修改切片的内容必须有[]</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>demo1[:<span class="number">3</span>]=<span class="number">1314</span></span><br><span class="line">TypeError: can only assign an iterable</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>demo1[<span class="number">0</span>:<span class="number">3</span>]=[<span class="number">1314</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>demo1   <span class="comment">#[1314, True, 99.1]</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>demo1[:<span class="number">2</span>]=<span class="string">&quot;1314&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>demo1   <span class="comment">#[&#x27;1&#x27;, &#x27;3&#x27;, &#x27;1&#x27;, &#x27;4&#x27;, 99.1]</span></span><br></pre></td></tr></table></figure>

<h4 id="小结："><a href="#小结：" class="headerlink" title="小结："></a>小结：</h4><blockquote>
<p>虽然可以将不同类型的数据放入到同一个列表中，但通常情况下不这么做，同一列表中只放入同一类型的数据，这样可以提高程序的可读性。</p>
</blockquote>
<h2 id="元组-tuple"><a href="#元组-tuple" class="headerlink" title="元组(tuple)"></a>元组(tuple)</h2><p>元组（tuple），是一个有序且<em><strong>不可变</strong></em>的容器，在里面可以存放多个<em><strong>不同类型</strong></em>的元素。</p>
<p>元组的表现形式为用()小括号包裹起来的数据,里面的数据用逗号，隔开</p>
<p><em><strong>但是在（）里面仅仅只有一个数据时为int类型，，除非数字后面加个逗号就是元组。</strong></em></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 语法</span></span><br><span class="line">变量名 = (数据<span class="number">1</span>，数据<span class="number">2</span>)</span><br><span class="line">tu = (<span class="number">1</span>,<span class="number">2</span>,<span class="string">&quot;dfds&quot;</span>, [<span class="number">12</span>,<span class="number">23</span>,<span class="number">21</span>,<span class="number">3</span>,<span class="number">23</span>,<span class="number">1</span>])</span><br><span class="line">tu = (<span class="number">11</span>,)   <span class="comment">#元组类型</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tu[-<span class="number">1</span>]=<span class="number">1314</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Traceback (most recent call last):</span></span><br><span class="line"><span class="string">  File &quot;&lt;pyshell#58&gt;&quot;, line 1, in &lt;module&gt;</span></span><br><span class="line"><span class="string">    tu[-1]=1314</span></span><br><span class="line"><span class="string">TypeError: &#x27;tuple&#x27; object does not support item assignment</span></span><br><span class="line"><span class="string">元组类型的值不支持修改，可以重新赋值 （同字符串）</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tu=(<span class="number">123</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tu     <span class="comment">#123</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str1=<span class="string">&quot;lalalala&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>str1[<span class="number">1</span>]=<span class="number">123</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">结果为：</span></span><br><span class="line"><span class="string">Traceback (most recent call last):</span></span><br><span class="line"><span class="string">  File &quot;&lt;pyshell#69&gt;&quot;, line 1, in &lt;module&gt;</span></span><br><span class="line"><span class="string">    str1[1]=123</span></span><br><span class="line"><span class="string">TypeError: &#x27;str&#x27; object does not support item assignment</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">str</span>[<span class="number">1</span>]=<span class="string">&quot;123&quot;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Traceback (most recent call last):</span></span><br><span class="line"><span class="string">  File &quot;&lt;pyshell#70&gt;&quot;, line 1, in &lt;module&gt;</span></span><br><span class="line"><span class="string">    str[1]=&quot;123&quot;</span></span><br><span class="line"><span class="string">TypeError: &#x27;str&#x27; object does not support item assignment</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">age = (<span class="number">18</span>)  <span class="comment"># int类型</span></span><br><span class="line">age = (<span class="number">18</span>,) <span class="comment"># tuple类型 --&gt; 就算元组里面只有一个数据,也要加个逗号.否则不会被认为是元组</span></span><br></pre></td></tr></table></figure>

<h4 id="小结：-1"><a href="#小结：-1" class="headerlink" title="小结："></a>小结：</h4><blockquote>
<p>元组的用法和列表基本类似,有两个不同之处:<br>   1.元组用小括号,列表用中括号 </p>
<p>   2.<strong>元组里面的数据,是不可以改变的</strong>，如果修改就得重新赋值(<strong>字符串也是不可变类型</strong>)</p>
<ol start="3">
<li><em><strong>tuple类型 –&gt; 就算元组里面只有一个数据,也要加个逗号.否则不会被认为是元组</strong></em></li>
</ol>
<p>如果你要保存的数据,可能会修改 –&gt; 列表来保存<br>如果你要保存的数据,不会修改 –&gt; 元组来保存</p>
</blockquote>
<h4 id="序列类型特点："><a href="#序列类型特点：" class="headerlink" title="序列类型特点："></a>序列类型特点：</h4><ul>
<li>能存储多个数据</li>
<li>内部数据有序 </li>
<li>能通过下标获取</li>
<li>通过切片切割</li>
<li>字符串和元组不能修改，列表可以。</li>
</ul>
<h2 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a>数据类型转换</h2><p>为了满足我们需求 需要 把一些数据，转换为别的类型</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># int(数据) --&gt; 把数据转为整形</span><br><span class="line"># float(数据) --&gt; 把数据转为浮点型形</span><br><span class="line"># bool(数据) --&gt; 把数据转为布尔形</span><br><span class="line"># str(数据) --&gt; 把数据转为字符串</span><br><span class="line"># list(数据) --&gt; 把数据转为列表</span><br><span class="line"># tuple(数据) --&gt; 把数据转为元组</span><br><span class="line"># input可以用来给变量赋值</span><br><span class="line"># 万能方法 eval()  ---&gt; 只对字符串有效  #一般不要使用</span><br><span class="line">name = input(&#x27;输入姓名&#x27;)</span><br><span class="line">age = input(&#x27;输入年龄&#x27;)  #age为str类型</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p> 注意：</p>
<ul>
<li><strong>input输入,得到的数据,默认是str类型</strong>.有些时候需要存储数字类型 则 int&#x2F;float  进行类型转换，</li>
<li>比如以上的age 变量，年龄大家 一般都存为数字，</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">age = int(input(&#x27;输入年龄&#x27;)) # 把得到的数据转换为整形再赋值给age       str为int型</span><br></pre></td></tr></table></figure>

<h2 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h2><p>一些特殊意思的字符！！比如 暗号，</p>
<p>编程中,字符串里同样也有特殊意思的字符，，，即转义字符</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">\n --&gt; 换行</span><br><span class="line">\t --&gt; 制表符(tab)一般是<span class="number">4</span>个空格</span><br><span class="line">\\ --&gt; 正常输出一个\</span><br><span class="line">\<span class="string">&#x27; --&gt; 正常输出一个引号  </span></span><br><span class="line"><span class="string">\a </span></span><br><span class="line"><span class="string">print(&#x27;</span>老板说:\t大家要注意身体\<span class="string">&#x27;&#x27;</span>)  <span class="comment">#老板说:	大家要注意身体&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;老板说:\n大家要注意身体\&#x27;&#x27;</span>)</span><br><span class="line"><span class="comment">#老板说:</span></span><br><span class="line"><span class="comment">#大家要注意身体&#x27;    </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 有的时候.不需要一个字符串里出现转义.可以在字符串前面加个r.就会取消转义功能</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">r&#x27;晚上好\t你吃饭了么啊\n哈哈哈\a&#x27;</span>)   <span class="comment">#晚上好\t你吃饭了么啊\n哈哈哈\a</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;晚上好\t你吃饭了么啊\n哈哈哈\a&#x27;</span>)    </span><br><span class="line"><span class="comment">#晚上好	你吃饭了么啊</span></span><br><span class="line"><span class="comment">#哈哈哈</span></span><br></pre></td></tr></table></figure>

<h2 id="作业-1"><a href="#作业-1" class="headerlink" title="作业"></a>作业</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.定义一个列表,列表中有3种&quot;数值类型&quot;,用多种方法获取里面的第二个值</span><br><span class="line">2.现有一变量 phone = 1314520,把phone转换为字符串,并输出1314与520</span><br><span class="line">3.现有一变量 names = &quot;pdd陈奕迅刘德华周杰伦&quot; 输出&quot;pdd&quot;,&quot;奕迅&quot;,&quot;德华周杰伦&quot;</span><br><span class="line">4.现有一变量 times = &quot;20990611&quot; 把其中的年,月,日分别输出出来</span><br><span class="line">5.现有一变量 talk=&quot;多喝热水&quot;,想办法输出&quot;水热喝多&quot;</span><br><span class="line">6.用一个print,输出下面内容</span><br><span class="line">众人    寻他千百度    </span><br><span class="line">那人    却在灯火阑珊处</span><br><span class="line"></span><br><span class="line">7.计算a, b, 相加 并打印出来 （代码题）</span><br><span class="line">	a = &quot;12&quot;</span><br><span class="line">	b = 111111111</span><br><span class="line">	</span><br><span class="line">8.元组可以进行修改吗（判断题）</span><br><span class="line">9.列表数据不能修改（判断题）</span><br><span class="line">10.字符串+数字类型可以吗（解答题）</span><br></pre></td></tr></table></figure>

<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1.定义一个列表,列表中有3种&quot;数值类型&quot;,用多种方法获取里面的第二个值</span></span><br><span class="line"><span class="built_in">list</span>=[<span class="number">12</span>,<span class="string">&quot;lallala&quot;</span>,(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>),<span class="literal">False</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>[<span class="number">1</span>])     <span class="comment">#下标</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>[<span class="number">1</span>:<span class="number">2</span>])   <span class="comment">#切片</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>[<span class="number">1</span>:<span class="number">0</span>:-<span class="number">1</span>])  <span class="comment">#切片</span></span><br><span class="line"><span class="comment">#2.现有一变量 phone = 1314520,把phone转换为字符串,并输出1314与520</span></span><br><span class="line">phone=<span class="number">1314520</span></span><br><span class="line">phone1=<span class="built_in">str</span>(phone)</span><br><span class="line"><span class="built_in">print</span>(phone1[:<span class="number">4</span>])</span><br><span class="line"><span class="built_in">print</span>(phone1[<span class="number">4</span>:])</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.现有一变量 names = &quot;pdd陈奕迅刘德华周杰伦&quot; 输出&quot;pdd&quot;,&quot;奕迅&quot;,&quot;德华周杰伦&quot;</span></span><br><span class="line">names = <span class="string">&quot;pdd陈奕迅刘德华周杰伦&quot;</span></span><br><span class="line"><span class="built_in">print</span>(names[:<span class="number">3</span>])</span><br><span class="line"><span class="built_in">print</span>(names[<span class="number">4</span>:<span class="number">6</span>])</span><br><span class="line"><span class="built_in">print</span>(names[<span class="number">7</span>:<span class="number">12</span>])</span><br><span class="line"><span class="built_in">print</span>(names[-<span class="number">5</span>:])</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.现有一变量 times = &quot;20990611&quot; 把其中的年,月,日分别输出出来</span></span><br><span class="line">times = <span class="string">&quot;20990611&quot;</span></span><br><span class="line">year=times[:<span class="number">4</span>]</span><br><span class="line">month=times[<span class="number">5</span>:<span class="number">6</span>]</span><br><span class="line"><span class="built_in">print</span>(times[<span class="number">7</span>:<span class="number">5</span>:-<span class="number">1</span>])</span><br><span class="line">days=times[-<span class="number">2</span>:]</span><br><span class="line"><span class="built_in">print</span>(year,month,days)</span><br><span class="line"></span><br><span class="line"><span class="comment">#5.现有一变量 talk=&quot;多喝热水&quot;,想办法输出&quot;水热喝多&quot;</span></span><br><span class="line">talk=<span class="string">&quot;多喝热水&quot;</span></span><br><span class="line"><span class="built_in">print</span>(talk[::-<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">6.用一个print,输出下面内容</span></span><br><span class="line"><span class="string">众人    寻他千百度    </span></span><br><span class="line"><span class="string">那人    却在灯火阑珊处</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;众人\t寻他千百度\n那人\t却在灯火阑珊处&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">7.计算a, b, 相加 并打印出来 （代码题）</span></span><br><span class="line"><span class="string">	a = &quot;12&quot;</span></span><br><span class="line"><span class="string">	b = 111111111</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">a = <span class="string">&quot;12&quot;</span></span><br><span class="line">b = <span class="number">111111111</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">int</span>(a)+b)</span><br><span class="line"><span class="comment">#8.元组可以进行修改吗（判断题）  不能</span></span><br><span class="line">tupe=(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line"><span class="comment">#type[2]=10   #TypeError: &#x27;type&#x27; object does not support item assignment</span></span><br><span class="line"><span class="comment">#9.列表数据不能修改（判断题）  #列表可以修改</span></span><br><span class="line">list2=[<span class="number">1</span>,(<span class="number">2</span>,<span class="number">3</span>,<span class="number">10</span>),<span class="number">5</span>]</span><br><span class="line">list2[<span class="number">1</span>]=<span class="number">4</span></span><br><span class="line"><span class="built_in">print</span>(list2)</span><br><span class="line"><span class="comment">#10.字符串+数字类型可以吗（解答题）</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;因为类型不同，所以不能相加。转化类型就可以了&quot;</span>)</span><br></pre></td></tr></table></figure>



<h3 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h3><p><a href="http://c.biancheng.net/view/4312.html">序列类型的方法</a></p>
<h1 id="八-序列类型的常用方法"><a href="#八-序列类型的常用方法" class="headerlink" title="八.序列类型的常用方法"></a>八.序列类型的常用方法</h1><h2 id="上节回顾"><a href="#上节回顾" class="headerlink" title="上节回顾"></a>上节回顾</h2><ul>
<li>字符串  str 用单引号或者是双引号包裹的数据就是字符串  <strong>不可变类型</strong></li>
<li>列表  list   用中括号 <code>[]</code> 包裹的数据就是列表  <strong>可变类型</strong>  列表里面可以放各种数据  包括元组列表</li>
<li>元组 tuple   用小括号 <code>()</code> 包裹的数据就是 元组， 不可变类型，</li>
<li><strong>int也是不可变类型</strong></li>
</ul>
<p>序列类型的特点</p>
<ul>
<li>下标    门牌号，我们通过下标去拿到数据 都是  以0开始</li>
<li>切片，[起始:结束: 步长]   取头不取尾，也就是 [0:5]   实际上 0到4 的数据</li>
</ul>
<h2 id="初始方法"><a href="#初始方法" class="headerlink" title="初始方法"></a>初始方法</h2><p>​		方法,eg:生活中解决的方法，方案，特定的功能</p>
<p>​		比如：车出现了问题      方法 1. 去修车厂 维修           方法2 直接买新的，</p>
<p>​		其实就是， <strong>对数据的增，删，改，查，</strong> 在我们一个程序中， 经常对数据进行操作，为了提高我们的开发效率，Python为我们设置一些内置方法，	</p>
<h2 id="列表方法"><a href="#列表方法" class="headerlink" title="列表方法"></a>列表方法</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 列表的方法</span></span><br><span class="line">li = [<span class="string">&quot;jk&quot;</span>, <span class="string">&quot;韦寻&quot;</span>, <span class="number">100</span>, <span class="string">&quot;张三&quot;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 增</span></span><br><span class="line"><span class="comment"># 1. append 添加一个数据，添加到列表的最后面</span></span><br><span class="line"><span class="comment"># 变量.append(数据)</span></span><br><span class="line"> li.append(<span class="string">&quot;李四&quot;</span>)</span><br><span class="line"><span class="comment">#  li.append(&quot;bbbb&quot;,&quot;pppppppppp&quot;)  #TypeError: append()只接受一个参数(给定2)</span></span><br><span class="line"> <span class="built_in">print</span>(li)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.insert  添加一个数据，必须指定位置，并且原数据会被挤在后面。不加位置会报错</span></span><br><span class="line"><span class="comment"># 变量.insert(下标,&quot;数据&quot;)</span></span><br><span class="line"><span class="comment"># li.insert(0,&quot;阿飞&quot;)</span></span><br><span class="line"><span class="comment"># print(li)</span></span><br><span class="line">li.insert(<span class="number">10000000000</span>,<span class="string">&quot;uuuuuuuuu&quot;</span>)   <span class="comment">#[&#x27;阿飞&#x27;, &#x27;jk&#x27;, &#x27;周杰伦&#x27;, 100, &#x27;张三&#x27;, &#x27;lalalalala&#x27;, &#x27;uuuuuuuuu&#x27;]</span></span><br><span class="line">name=li.insert(<span class="number">100000000</span>,<span class="string">&quot;oooooooooooo&quot;</span>) <span class="comment">#None   insert的返回值为None</span></span><br><span class="line"><span class="built_in">print</span>(name)</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">insert插入必须给位置，否则报错</span></span><br><span class="line"><span class="string">insert插入的位置为负值且超过它自身长度时默认插在最前面</span></span><br><span class="line"><span class="string">insert插入的位置为正值且超过它自身长度时默认插在最后面</span></span><br><span class="line"><span class="string">insert插入的位置为长度范围之内时，正值从前往后，负值从后往前</span></span><br><span class="line"><span class="string">当给insert插入的值赋值给另一变量时，输出为None</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.extend 追加一个数据到最后一位，把数据打散放入</span></span><br><span class="line"></span><br><span class="line">li.extend(<span class="string">&quot;hello world,&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(li)<span class="comment">#[&#x27;jk&#x27;, &#x27;周杰伦&#x27;, 100, &#x27;张三&#x27;, &#x27;h&#x27;, &#x27;e&#x27;, &#x27;l&#x27;, &#x27;l&#x27;, &#x27;o&#x27;, &#x27; &#x27;, &#x27;w&#x27;, &#x27;o&#x27;, &#x27;r&#x27;, &#x27;l&#x27;, &#x27;d&#x27;, &#x27;,&#x27;]</span></span><br><span class="line">li.append(<span class="string">&quot;hello world,&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(li)<span class="comment">#[&#x27;jk&#x27;, &#x27;周杰伦&#x27;, 100, &#x27;张三&#x27;, &#x27;hello world,&#x27;]</span></span><br><span class="line"></span><br><span class="line">li.extend([<span class="number">123</span>,<span class="number">123</span>,])</span><br><span class="line">li.extend([<span class="number">123</span>,<span class="number">123</span>])</span><br><span class="line"><span class="built_in">print</span>(li) <span class="comment">#[&#x27;jk&#x27;, &#x27;周杰伦&#x27;, 100, &#x27;张三&#x27;, 123, 123]</span></span><br><span class="line">li.append([<span class="number">123</span>,<span class="number">123</span>,])</span><br><span class="line">li.append([<span class="number">123</span>,<span class="number">123</span>])</span><br><span class="line"><span class="built_in">print</span>(li) <span class="comment">#[&#x27;jk&#x27;, &#x27;周杰伦&#x27;, 100, &#x27;张三&#x27;, [123, 123]]</span></span><br><span class="line"></span><br><span class="line">li.extend((<span class="number">123</span>,<span class="number">123</span>,))</span><br><span class="line">li.extend((<span class="number">123</span>,<span class="number">123</span>))</span><br><span class="line"><span class="built_in">print</span>(li) <span class="comment">#[&#x27;jk&#x27;, &#x27;周杰伦&#x27;, 100, &#x27;张三&#x27;, 123, 123]</span></span><br><span class="line">li.append((<span class="number">123</span>,<span class="number">123</span>,))</span><br><span class="line">li.append((<span class="number">123</span>,<span class="number">123</span>))</span><br><span class="line"><span class="built_in">print</span>(li) <span class="comment">#[&#x27;jk&#x27;, &#x27;周杰伦&#x27;, 100, &#x27;张三&#x27;, (123, 123)]</span></span><br><span class="line">          <span class="comment">#[&#x27;jk&#x27;, &#x27;周杰伦&#x27;, 100, &#x27;张三&#x27;, (123, 123)]</span></span><br><span class="line">    </span><br><span class="line">li.extend(<span class="number">123</span>)</span><br><span class="line"><span class="built_in">print</span>(li)<span class="comment">#TypeError: &#x27;int&#x27; object is not iterable可迭代的</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">添加的值必须是序列类型   所以int不能加入  因为int不是序列类型</span></span><br><span class="line"><span class="string">如果添加的列表[]  ，元组（&quot;Hello world&quot;，）    不会被打散</span></span><br><span class="line"><span class="string">append添加带[]or(),ectend不带</span></span><br><span class="line"><span class="string">无论append还是extend,(123,123,)与(123,123)输出结果一样</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删</span></span><br><span class="line"><span class="comment"># 1. pop 删除一个值， 也可以指定位置  默认就是删最后一位</span></span><br><span class="line"><span class="comment"># 变量.pop()</span></span><br><span class="line"><span class="comment"># 变量.pop(下标)</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(li)   <span class="comment">#[&#x27;jk&#x27;, &#x27;周杰伦&#x27;, 100, &#x27;张三&#x27;]</span></span><br><span class="line"><span class="built_in">print</span>(li.pop())  <span class="comment">#张三   pop方法返回删除值</span></span><br><span class="line"><span class="built_in">print</span>(li)  <span class="comment">#[&#x27;jk&#x27;, &#x27;周杰伦&#x27;, 100]</span></span><br><span class="line"></span><br><span class="line">li.pop(<span class="number">1</span>)  </span><br><span class="line"><span class="built_in">print</span>(li)   <span class="comment"># [&#x27;jk&#x27;, 100, &#x27;张三&#x27;]</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string"> pop方法返回删除值</span></span><br><span class="line"><span class="string"> 下标越界会报错</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. remove 删除一个值， 有多个值， 根据下标 数据删除</span></span><br><span class="line"><span class="comment"># 变量.remove(数据)</span></span><br><span class="line">li1 = [<span class="string">&quot;杰伦&quot;</span>, <span class="string">&quot;jk&quot;</span>,<span class="string">&quot;阿飞&quot;</span>,<span class="string">&quot;jk&quot;</span>]</span><br><span class="line"><span class="comment"># li1.remove(&quot;jk&quot;) # [&#x27;杰伦&#x27;, &#x27;阿飞&#x27;, &#x27;jk&#x27;]</span></span><br><span class="line"><span class="comment"># print(li1)</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">若有多个相同值，根据下标小的删除</span></span><br><span class="line"><span class="string">若remove一个没有的值会报错#ValueError: list.remove(x): x not in list</span></span><br><span class="line"><span class="string">若remove的里面啥都不给也会报错#ypeError: remove() takes exactly one argument (0 given)</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># clear 直接清空 列表，</span></span><br><span class="line"><span class="comment"># 变量.clear()</span></span><br><span class="line"><span class="comment"># li1.clear()</span></span><br><span class="line"><span class="comment"># print(li1)  # []</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># del 删除 直接干掉</span></span><br><span class="line"><span class="comment"># del 变量名</span></span><br><span class="line"><span class="comment"># del 列表名</span></span><br><span class="line"><span class="comment"># del 列表[下标]</span></span><br><span class="line"><span class="keyword">del</span> li1  <span class="comment">#NameError: name &#x27;li1&#x27; is not defined</span></span><br><span class="line"><span class="keyword">del</span> li1[<span class="number">1</span>]</span><br><span class="line"><span class="keyword">del</span> li1[:<span class="number">1</span>]</span><br><span class="line">a = <span class="number">100</span></span><br><span class="line"><span class="keyword">del</span> a</span><br><span class="line"><span class="keyword">del</span> li1[<span class="number">2</span>] <span class="comment"># [&#x27;杰伦&#x27;, &#x27;jk&#x27;, &#x27;jk&#x27;]</span></span><br><span class="line"><span class="built_in">print</span>(li1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 改</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下标修改</span></span><br><span class="line"><span class="comment"># 列表[下标] = 数据</span></span><br><span class="line">li1 = [<span class="string">&quot;杰伦&quot;</span>, <span class="string">&quot;jk&quot;</span>,<span class="string">&quot;阿飞&quot;</span>,<span class="string">&quot;jk&quot;</span>]</span><br><span class="line">li1[<span class="number">1</span>] = <span class="string">&quot;韦寻&quot;</span>   <span class="comment">#通过下标</span></span><br><span class="line"><span class="built_in">print</span>(li1)  <span class="comment"># [&#x27;杰伦&#x27;, &#x27;韦寻&#x27;, &#x27;阿飞&#x27;, &#x27;jk&#x27;]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 切片修改</span></span><br><span class="line"><span class="comment"># 列表[起始:结束] = 数据，数据，数据</span></span><br><span class="line"><span class="comment"># li1[1:-1] = &quot;韦寻&quot;,111,520</span></span><br><span class="line"><span class="comment"># print(li1) </span></span><br><span class="line">li1[<span class="number">1</span>:<span class="number">3</span>]=[<span class="string">&quot;A&quot;</span>,<span class="string">&quot;B&quot;</span>,<span class="string">&quot;C&quot;</span>]<span class="comment">#[&#x27;杰伦&#x27;, &#x27;A&#x27;, &#x27;B&#x27;, &#x27;C&#x27;, &#x27;jk&#x27;]</span></span><br><span class="line">li1[<span class="number">1</span>:<span class="number">3</span>]=<span class="string">&quot;A&quot;</span>,<span class="string">&quot;B&quot;</span>,<span class="string">&quot;C&quot;</span>  <span class="comment">#[&#x27;杰伦&#x27;, &#x27;A&#x27;, &#x27;B&#x27;, &#x27;C&#x27;, &#x27;jk&#x27;]</span></span><br><span class="line">li1[<span class="number">1</span>:<span class="number">3</span>]=[<span class="number">123</span>]<span class="comment">#[&#x27;杰伦&#x27;, 123, &#x27;jk&#x27;]</span></span><br><span class="line">li1[<span class="number">1</span>:<span class="number">3</span>]=<span class="number">123</span><span class="comment">#报错</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">修改时加不加[]输出一样，只要数据是序列，int类型li1[1:3]=123这样不行</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># 查</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.index  根据内容返回下标， 找到返回下标</span></span><br><span class="line"><span class="comment"># 列表.index(内容)</span></span><br><span class="line">li2 = [<span class="string">&quot;sdfs&quot;</span>,<span class="string">&quot;jk&quot;</span>, <span class="string">&quot;韦寻&quot;</span>]</span><br><span class="line">str1 = <span class="string">&quot;adsb&quot;</span></span><br><span class="line"><span class="built_in">print</span>(str1.index(<span class="string">&quot;ad&quot;</span>))</span><br><span class="line"><span class="built_in">print</span>(li2.index(<span class="string">&quot;阿飞&quot;</span>))</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">如果不存在的内容报错</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># 其他</span></span><br><span class="line"><span class="comment"># sort 排序， 默认从小到大， reverse=True 才是 从大到小</span></span><br><span class="line"><span class="comment"># 列表.sort()</span></span><br><span class="line"></span><br><span class="line">li3 = [<span class="number">123</span>,<span class="number">12312</span>,<span class="number">3</span>,<span class="number">12</span>,<span class="number">3</span>,<span class="number">12</span>,<span class="number">312</span>,<span class="number">2</span>,<span class="number">312</span>,<span class="number">3</span>]</span><br><span class="line">li3.sort()  <span class="comment"># [2, 3, 3, 3, 12, 12, 123, 312, 312, 12312]</span></span><br><span class="line">li3.sort(reverse=<span class="literal">True</span>)  <span class="comment"># [12312, 312, 312, 123, 12, 12, 3, 3, 3, 2]</span></span><br><span class="line"><span class="built_in">print</span>(li3)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="元组方法"><a href="#元组方法" class="headerlink" title="元组方法"></a>元组方法</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">num = (<span class="number">1</span>,<span class="number">212</span>,<span class="number">312</span>,<span class="number">1</span>,<span class="number">312</span>,<span class="number">31232112</span>,<span class="number">121</span>,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># index 根据内容返回下标  否则不存在则程序报错</span></span><br><span class="line">变量.index()</span><br><span class="line"><span class="built_in">print</span>(num.index(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># count 统计数据出现的次数</span></span><br><span class="line">变量.count()</span><br><span class="line"><span class="built_in">print</span>(num.count(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="字符串的方法"><a href="#字符串的方法" class="headerlink" title="字符串的方法"></a>字符串的方法</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># + 拼接字符串   -不允许</span></span><br><span class="line">str1 = <span class="string">&quot;hello&quot;</span> + <span class="string">&quot; world&quot;</span></span><br><span class="line">str1 += <span class="string">&quot;韦寻&quot;</span></span><br><span class="line"><span class="built_in">print</span>(str1) <span class="comment">#hello world韦寻</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># join 拼接字符串的 根据指定 字符连接</span></span><br><span class="line"><span class="comment"># seq 序列类型 元组 列表 字符串</span></span><br><span class="line"><span class="comment"># 变量名.join(seq)</span></span><br><span class="line"></span><br><span class="line">flag = <span class="string">&quot;-&quot;</span></span><br><span class="line">li = (<span class="string">&quot;1&quot;</span>,<span class="string">&quot;223&quot;</span>,<span class="string">&quot;12&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(flag.join(li))  <span class="comment">#1-223-12</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(flag.join(li)))<span class="comment">#&lt;class &#x27;str&#x27;&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删</span></span><br><span class="line"><span class="comment"># replace 替换</span></span><br><span class="line"><span class="comment"># 变量.replace(&quot;要替换的值&quot;, &quot;&quot;)  #什么都不写则替换为空</span></span><br><span class="line"><span class="comment"># 变量.replace(&quot;要替换的值&quot;, &quot;新的值&quot;)</span></span><br><span class="line"><span class="comment"># 变量.replace(&quot;要替换的值&quot;, &quot;新的值&quot;, 修改的次数)</span></span><br><span class="line"></span><br><span class="line">str1 = <span class="string">&quot;何年今夕是何年&quot;</span></span><br><span class="line"><span class="built_in">print</span>(str1.replace(<span class="string">&quot;何年&quot;</span>,<span class="string">&quot;&quot;</span>)) <span class="comment">#空的字符串</span></span><br><span class="line"><span class="built_in">print</span>(str1.replace(<span class="string">&quot;何年&quot;</span>,<span class="string">&quot; &quot;</span>))<span class="comment">#空格字符串</span></span><br><span class="line"><span class="built_in">print</span>(str1.replace(<span class="string">&quot;何年&quot;</span>,<span class="string">&quot;2022年&quot;</span>))</span><br><span class="line"><span class="built_in">print</span>(str1.replace(<span class="string">&quot;何年&quot;</span>,<span class="string">&quot;2022年&quot;</span>,<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(str1.replace(<span class="string">&quot;何年&quot;</span>,<span class="string">&quot;2022年&quot;</span>,-<span class="number">1</span>))</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">今夕是</span></span><br><span class="line"><span class="string"> 今夕是 </span></span><br><span class="line"><span class="string">2022年今夕是2022年</span></span><br><span class="line"><span class="string">2022年今夕是何年</span></span><br><span class="line"><span class="string">2022年今夕是2022年</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 改</span></span><br><span class="line">desc = <span class="string">&quot; jace is boy 帅哥 &quot;</span></span><br><span class="line"><span class="comment"># upper  字符串字母 变成 大写</span></span><br><span class="line"><span class="comment"># 变量.upper()</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(desc.upper()) <span class="comment"># JACE IS BOY 帅哥</span></span><br><span class="line"><span class="built_in">print</span>(desc) <span class="comment">#  jace is boy 帅哥 </span></span><br><span class="line">desc=desc.upper()</span><br><span class="line"><span class="built_in">print</span>(desc) <span class="comment"># JACE IS BOY 帅哥</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># lower  字符串字母 变成 小写</span></span><br><span class="line"><span class="comment"># 变量.lower()</span></span><br><span class="line">desc=<span class="string">&quot;JACE IS BOY 帅哥&quot;</span></span><br><span class="line"><span class="built_in">print</span>(desc.lower()) <span class="comment"># jace is boy 帅哥</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># titile 单词首字母大写,    可判断空格</span></span><br><span class="line"><span class="comment"># 变量.title()</span></span><br><span class="line">desc = <span class="string">&quot; jace is boy 帅哥 &quot;</span></span><br><span class="line"><span class="built_in">print</span>(desc.title()) <span class="comment"># Jace Is Boy 帅哥</span></span><br><span class="line">desc=<span class="string">&quot;JACE IS BOY 帅哥&quot;</span></span><br><span class="line"><span class="built_in">print</span>(desc.title()) <span class="comment"># Jace Is Boy 帅哥</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># strip 去除字符串左右两边的空格   换行符号\n 也ok</span></span><br><span class="line"><span class="comment"># 变量.strip()</span></span><br><span class="line">desc = <span class="string">&quot; jace is boy 帅哥\n&quot;</span></span><br><span class="line"><span class="built_in">print</span>(desc.strip())  <span class="comment">#jace is boy 帅哥</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># split 切分， 根据指定的内容 切分字符串</span></span><br><span class="line"><span class="comment"># 变量.spilt(&quot;分割对象&quot;)</span></span><br><span class="line">desc = <span class="string">&quot; jace is boy 帅哥&quot;</span></span><br><span class="line"><span class="built_in">print</span>(desc.split(<span class="string">&quot;is&quot;</span>)) <span class="comment"># [&#x27; jace &#x27;, &#x27; boy 帅哥 &#x27;]</span></span><br><span class="line"><span class="comment">#如果分割对象不存在  相当于list类型转化  但实际转化会被分散</span></span><br><span class="line">desc = <span class="string">&quot; jace is boy 帅哥&quot;</span></span><br><span class="line"><span class="built_in">print</span>(desc.split(<span class="string">&quot;isqq&quot;</span>))<span class="comment">#[&#x27; jace is boy 帅哥&#x27;]</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(desc)) </span><br><span class="line"><span class="comment">#[&#x27; &#x27;, &#x27;j&#x27;, &#x27;a&#x27;, &#x27;c&#x27;, &#x27;e&#x27;, &#x27; &#x27;, &#x27;i&#x27;, &#x27;s&#x27;, &#x27; &#x27;, &#x27;b&#x27;, &#x27;o&#x27;, &#x27;y&#x27;, &#x27; &#x27;, &#x27;帅&#x27;, &#x27;哥&#x27;]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查</span></span><br><span class="line">kd = <span class="string">&quot;pdd,Jay,韦寻&quot;</span></span><br><span class="line"><span class="comment"># find 通过内容 找到 返回它的下标      找不到 返回-1</span></span><br><span class="line"><span class="comment"># 变量.find(&quot;内容&quot;)</span></span><br><span class="line"><span class="comment"># 变量.find(&quot;内容&quot;,起点)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># print(kd.find(&quot;成龙&quot;)) # -1</span></span><br><span class="line"><span class="comment"># print(kd.find(&quot;pdd&quot;))  # 0</span></span><br><span class="line"><span class="comment"># print(kd.find(&quot;pdd&quot;,3)) # -1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># count 统计数据出现的次数</span></span><br><span class="line"><span class="comment"># 变量.count(&quot;数据&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># print(kd.count(&quot;p&quot;)) # 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># isdigit 判断该字符串是否是纯数字  返回bool值 True False</span></span><br><span class="line"><span class="comment"># 变量.isdigit()</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(kd.isdigit()) <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># isalpha 判断该字符串是否是纯字母  返回bool值 True False</span></span><br><span class="line"><span class="comment"># 变量.isalpha()</span></span><br><span class="line"><span class="built_in">print</span>(kd.isalpha())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># endswith 判断字符串的尾巴后缀.是否于指定的数据相等   返回bool值 True False</span></span><br><span class="line"><span class="comment"># 变量.endswith()</span></span><br><span class="line"><span class="comment"># 用作判断文件类型，通过后缀  .jgp .png  .mp3 .mp4 .pdf</span></span><br><span class="line"><span class="built_in">print</span>(kd.endswith(<span class="string">&quot;.jpg&quot;</span>)) <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># len函数 》》 获取序列类型的长度，也可以知道 数据有几个</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">111</span>,<span class="number">4</span>]))  <span class="comment">#  5</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(kd))              <span class="comment"># 10</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment"># https://www.runoob.com/python3/python3-string.html  想了解更多的内容，</span></span><br></pre></td></tr></table></figure>

<p>小结：</p>
<blockquote>
<p>split （经常会用到, 并且返回的是列表）</p>
<p>replace （）</p>
<p>这里只是一部分方法，大家也可以课后看看其他的方法<a href="https://www.runoob.com/python3/python3-string.html">https://www.runoob.com/python3/python3-string.html</a></p>
<p>提前复习的网站<a href="http://c.biancheng.net/python/">http://c.biancheng.net/python/</a></p>
</blockquote>
<h2 id="可变类型与不可变类型"><a href="#可变类型与不可变类型" class="headerlink" title="可变类型与不可变类型"></a>可变类型与不可变类型</h2><ul>
<li>字符串，数字，元组都是不可变的，里面的数据是不能改变的，除非你重新赋值</li>
<li>字符串 》》》 样品， 产品图，概念图</li>
<li>经过 方法 》》 商品，成品</li>
</ul>
<h2 id="作业-2"><a href="#作业-2" class="headerlink" title="作业"></a>作业</h2><ul>
<li><p>1.用什么方法可以知道字符串的长度</p>
</li>
<li><p>&#96;&#96;&#96;python </p>
<ol start="2">
<li>将输入的字符串反转过来<br>示例 1:<br>输入: “hello”<br>输出: “olleh”</li>
</ol>
<p>3.将字符串 “abcd” 转成大写<br>4.计算字符串 “cd” 在 字符串 “abcd”中出现的位置<br>5.s1 &#x3D; “Python is good”, 请将字符串里的Python替换成 python,并输出替换后的结果<br>6.有一个字符串 s2 &#x3D;  “python修炼第一期.html”，请写程序从这个字符串里获得.html前面的部分，要用尽可能多的方式来做这个事情</p>
<ol start="7">
<li>“this is a book\n”， 字符串的末尾有一个回车符，请将其删除</li>
<li>“this is a book”,请将字符串里的book替换成apple</li>
<li>“this is a book”, 请用程序判断该字符串是否以this开头</li>
<li>“this is a book”, 请用程序判断该字符串是否以apple结尾</li>
<li>“This IS a book”， 请将字符串里的字符转成小写字符<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">  列表</span><br><span class="line">  num_li = [1,2,3,4,5]</span><br><span class="line"></span><br><span class="line">  1.求列表的长度</span><br><span class="line">  2.判断6 是否在列表中</span><br><span class="line">  3.numli + [6, 7, 8] 的结果是什么？</span><br><span class="line">  4.numli*2 的结果是什么</span><br><span class="line">  5.列表里元素的最大值是多少</span><br><span class="line">  6.列表里元素的最小值是多少</span><br><span class="line">  7.列表里所有元素的和是多少</span><br><span class="line">  8.在索引1的位置新增一个的元素10</span><br><span class="line">  9.在列表的末尾新增一个元素20</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 使用typora 做笔记的语法</span><br><span class="line"></span><br><span class="line">markdown 语法</span><br><span class="line"></span><br><span class="line">[教程](https://www.jianshu.com/p/399e5a3c7cc5)</span><br><span class="line"></span><br><span class="line">## 爬虫小案例</span><br><span class="line"></span><br><span class="line">安装模块</span><br><span class="line"></span><br><span class="line">```python </span><br><span class="line">pip install html5lib -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">pip install requests -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">pip install lxml -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure></li>
</ol>
<p>​</p>
<p>​</p>
<p>​</p>
<p>​</p>
<p>​</p>
</li>
</ul>
<p>	</p>
]]></content>
  </entry>
  <entry>
    <title>Hello，臭狗熊blog！</title>
    <url>/2022/10/17/hello-world/</url>
    <content><![CDATA[<h3 id="If-it-doesn’t-challenge-you-it-won’t-change-you"><a href="#If-it-doesn’t-challenge-you-it-won’t-change-you" class="headerlink" title="If it doesn’t challenge you,it won’t change you!"></a><em>If it doesn’t challenge you,it won’t change you!</em></h3><span id="more"></span>

<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1430566047&auto=1&height=66"></iframe>

<h3 id="一-来源于那次的心血来潮"><a href="#一-来源于那次的心血来潮" class="headerlink" title="一.来源于那次的心血来潮"></a>一.来源于那次的心血来潮</h3><p>此时距离搭建博客不到三天时间，某午后心血来潮的想拥有一个自己的小破站，不仅仅是为了记录些什么，更想去试试，锻炼自己，并一直坚持下去。除此之外，此时已经被封宿舍许久，表示自己快要发霉了。当然，也有部分原因就是大三焦虑症，作为一名普通本科学习的信管班学生，家里也没什么矿，更是前途堪忧啊！</p>
<h3 id="二-自我认知"><a href="#二-自我认知" class="headerlink" title="二.自我认知"></a>二.自我认知</h3><p>首先谈谈自己的专业，信息管理与信息系统，这个专业学的广而不精。偏技术，又偏管理，但是呢，学技术的话学校不太重视这个专业，你比不过计算机班，网络安全，信息安全。学管理呢，开的课设也不是特别多。所以呢，当面临着毕业的时候就很头疼。</p>
<p><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Frcbqb.ccmeng.com%3A66%2Ftp%2Farticle%2F228%2F2_frd1k__.jpg&refer=http%3A%2F%2Frcbqb.ccmeng.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1668781829&t=f5c7b0be9ac371a8c0bbcc6490f740c9" alt="心情复杂"></p>
<h3 id="三-考研-or-工作"><a href="#三-考研-or-工作" class="headerlink" title="三.考研 or 工作"></a>三.考研 or 工作</h3><p>目前形式就是遍地本科生，考研压力大，就业压力也大，考公压力更大。那到底是考研还是就业呢，我个人觉得应该充分考虑自己情形而定，别人的建议那只是建议，决定权还是在你收录。最最忌讳的就是随波逐流，别人干什么你就干甚，很羡慕那些有方向的同志。</p>
<p>如果你家庭情况比较不错，并且学习能力强，基础不错，不管是普通本科，还是985  211我建议还是去考研。考研的好处不言而喻，以后发展空间大，现在很多大厂都是研究生门槛。</p>
<p>如果你家庭情况不太好，又理论基础不是很好，建议还是就业，就业的好处呢就是可以提前面临社会毒打，，哈哈哈，有工作经验了，技术提高了，那以后进更好的大厂，更好的环境还是极有可能的，并且在三四十岁，经济压力小。</p>
<p>纵然选择很难，但是这是每个即将毕业的同志必须面临的，如果你觉得考研，就一定要提前去准备，毕竟现在考研也是很困难的，很卷的。。。最迟大三就要去准备。。。</p>
<p>对于全日制研究生和非全日制研究生，我的建议就是能全日制就不要非全日制。</p>
<h3 id="四-终身学习"><a href="#四-终身学习" class="headerlink" title="四.终身学习"></a>四.终身学习</h3><p>学习本身并不难，最难的是坚持。对于程序员来说，学习能力和兴趣很大程度上决定个人能力，公司不会因为你什么都不会，而简历上一句我特能吃苦耐劳去给你offer。</p>
<h3 id="五-未来"><a href="#五-未来" class="headerlink" title="五.未来"></a>五.未来</h3><p>目前的自己很菜，但是我会一直坚持下去，一点点的去啃，一点点的去进步，一点点的去积累。过去，车马很慢，一生很难走出去。如今，车水马龙，却总是迷失在灯红酒绿中。</p>
]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
</search>
